"use strict";var MAP=[[2,0,5,3,0,0,2,0,0,3,0,0,2],[0,3,0,3,0,0,0,0,0,3,5,4,4],[4,4,4,3,5,0,0,0,0,3,0,0,0],[4,0,4,3,5,5,0,0,3,3,3,3,0],[3,3,3,3,3,5,5,0,0,8,0,3,0],[0,4,4,8,8,8,0,0,0,8,3,3,0],[3,3,3,5,8,3,3,3,0,8,3,3,3],[4,8,0,0,3,5,5,8,8,8,0,0,0],[4,8,0,3,0,0,0,0,0,0,0,0,0],[4,8,3,3,3,3,5,3,3,3,3,0,0],[3,5,0,3,0,5,0,5,5,0,0,0,0],[3,5,4,0,0,3,3,3,0,4,4,4,0],[3,4,3,0,0,3,0,3,0,0,0,4,0],[4,4,3,0,1,3,7,3,6,8,8,4,4]],MAP_LEGEND={PLAYER_BASE:1,ENEMY_BASE:2,WALL:3,FOREST:4,ARMOUR:5,SECOND_PLAYER:6,PLAYER_FLAG:7,WATER:8};class GameItem{constructor(t){this.gameMap=document.querySelector("#game-map"),this.itemWidth=64,this.itemHeight=64,this.fieldWidth=this.gameMap.clientWidth,this.fieldHeight=this.gameMap.clientHeight,this.item=document.createElement("div"),this.item.classList.add("game-object"),this.directions=["top","left","right","down"],this.direction=t.direction,this.wasKilled=!1,this.rank=t.rank,this.x=t.x,this.y=t.y,this.baseX=t.baseX,this.baseY=t.baseY,this.step=t.step,this.run=t.run,this.obstacleReached=!1,this.type=t.type,this.id=t.id}addItemOnField(t,e,s){this.gameMap.append(this.item),this.item.style.left=t*this.itemWidth+"px",this.item.style.top=e*this.itemHeight+"px",this.x=t*this.itemWidth,this.y=e*this.itemHeight,this.baseX=t*this.itemWidth,this.baseY=e*this.itemHeight,s.push(this)}move(){if(!0===this.run)switch(this.direction){case"left":this.x>0&&(this.x-=this.step,this.item.style.left=this.x+"px");break;case"right":this.x<this.fieldWidth-this.item.offsetWidth&&(this.x+=this.step,this.item.style.left=this.x+"px");break;case"top":this.y>0&&(this.y-=this.step,this.item.style.top=this.y+"px");break;case"down":this.y<this.fieldHeight-this.item.offsetHeight&&(this.y+=this.step,this.item.style.top=this.y+"px")}}checkDistance(){let t=this.item.offsetLeft+this.item.offsetWidth/2,e=this.item.offsetTop+this.item.offsetHeight/2;for(let s=0;s<MY_GAME.ALL_PLAY_ITEMS.length;s++){let i=t-(MY_GAME.ALL_PLAY_ITEMS[s].item.offsetLeft+MY_GAME.ALL_PLAY_ITEMS[s].item.offsetWidth/2),a=e-(MY_GAME.ALL_PLAY_ITEMS[s].item.offsetTop+MY_GAME.ALL_PLAY_ITEMS[s].item.offsetHeight/2),h=(this.item.offsetWidth+MY_GAME.ALL_PLAY_ITEMS[s].item.offsetWidth)/2;i<=h&&i>1&&Math.abs(a)<h&&"left"===this.direction||i>=-h&&i<-1&&Math.abs(a)<h&&"right"===this.direction||a<=h&&a>1&&Math.abs(i)<h&&"top"===this.direction||a>=-h&&a<-1&&Math.abs(i)<h&&"down"===this.direction?(("player-tank"===this.type&&"player-bullet"!==MY_GAME.ALL_PLAY_ITEMS[s].type||"enemy-tank"===this.type&&"enemy-bullet"!==MY_GAME.ALL_PLAY_ITEMS[s].type)&&(this.run=!1,this.obstacleReached=!0),"enemy-bullet"===this.type&&"flag"===MY_GAME.ALL_PLAY_ITEMS[s].type?MY_GAME.IS_GAME_OVER=!0:"enemy-bullet"===this.type&&"enemy-tank"===MY_GAME.ALL_PLAY_ITEMS[s].type||"player-bullet"===this.type&&"player-tank"===MY_GAME.ALL_PLAY_ITEMS[s].type?this.wasKilled=!0:("player-bullet"===this.type&&("wall"===MY_GAME.ALL_PLAY_ITEMS[s].type||"armour"===MY_GAME.ALL_PLAY_ITEMS[s].type||"flag"===MY_GAME.ALL_PLAY_ITEMS[s].type||"enemy-tank"===MY_GAME.ALL_PLAY_ITEMS[s].type||"enemy-bullet"===MY_GAME.ALL_PLAY_ITEMS[s].type)||"enemy-bullet"===this.type&&("wall"===MY_GAME.ALL_PLAY_ITEMS[s].type||"armour"===MY_GAME.ALL_PLAY_ITEMS[s].type||"player-tank"===MY_GAME.ALL_PLAY_ITEMS[s].type||"player-bullet"===MY_GAME.ALL_PLAY_ITEMS[s].type)||"enemy-bullet"===this.type&&"enemy-bullet"===MY_GAME.ALL_PLAY_ITEMS[s].type||"player-bullet"===this.type&&"player-bullet"===MY_GAME.ALL_PLAY_ITEMS[s].type)&&(this.wasKilled=!0,MY_GAME.ALL_PLAY_ITEMS[s].wasKilled=!0)):(this.x<=0&&"left"===this.direction||this.x>=this.fieldWidth-this.item.offsetWidth&&"right"===this.direction||this.y<=0&&"top"===this.direction||this.y>=this.fieldHeight-this.item.offsetHeight&&"down"===this.direction)&&(this.run=!1,this.obstacleReached=!0,"player-bullet"!==this.type&&"enemy-bullet"!==this.type||(this.wasKilled=!0))}}}class AudioTrack{constructor(t){this.container=document.body,this.track=document.createElement("audio"),this.id=t.id,this.src=t.src,this.track.setAttribute("src",this.src),this.container.insertBefore(this.track,document.querySelector("main"))}}const Engine=new AudioTrack({id:"engine",src:"audio/engine-freeze.mp3"}),Movement=new AudioTrack({id:"movement",src:"audio/move.mp3"}),Shot=new AudioTrack({id:"shot",src:"audio/shot.mp3"}),Main=new AudioTrack({id:"main",src:"audio/main.mp3"}),Death=new AudioTrack({id:"death",src:"audio/cutdeath.mp3"});class LifeIcon{constructor(t){this.container=t.container,this.class=t.class,this.attribute=t.attribute,this.container=document.querySelector(this.container),this.life=document.createElement("img"),this.life.classList.add(this.class),this.life.setAttribute("src",this.attribute),this.container.append(this.life)}}class PlayerFlag extends GameItem{constructor(t){super(t),this.item.classList.add("player-base")}}class Modal{constructor(t){this.modal=document.querySelector(".intro-modal"),this.pointer=document.querySelector(".pointer"),this.onePlayer=document.querySelector("#one-player"),this.twoPlayers=document.querySelector("#two-players"),this.choiceBlock=document.querySelector(".player-choice"),this.numberOfPlayers=1,this.gameStart=!0}show(){this.modal.classList.remove("hidden")}hide(){this.modal.classList.add("hidden")}makeChoice(){this.choiceBlock.addEventListener("focus",t=>{"two-players"===t.target.getAttribute("id")?(this.pointer.classList.add("down"),this.numberOfPlayers=2):(this.pointer.classList.remove("down"),this.numberOfPlayers=1)},!0),document.addEventListener("keyup",t=>{switch(t.keyCode){case 38:this.pointer.classList.remove("down"),this.numberOfPlayers=1;break;case 40:this.pointer.classList.add("down"),this.numberOfPlayers=2}})}runTheGame(t){document.addEventListener("keydown",e=>{13===e.keyCode&&!0===this.gameStart&&(this.gameStart=!1,this.hide(),t())})}}class Wall extends GameItem{constructor(t){super(t),this.class=t.class,this.item.classList.add(this.class),this.touchNumber=0}destroyTheWall(){!0===this.wasKilled&&0===this.touchNumber?(this.item.classList.add("half-destroyed"),this.wasKilled=!1,this.touchNumber+=1):!0===this.wasKilled&&1===this.touchNumber&&this.item.remove()}}class Forest extends Wall{constructor(t){super(t)}}class Armour extends Wall{constructor(t){super(t)}}class Water extends Wall{constructor(t){super(t)}}class Game{constructor(t){this.IS_GAME_OVER=!1,this.GAME_TIMER_INTERVAL=30,this.ENEMY_TANKS_COUNT=t.ENEMY_TANKS_COUNT,this.PLAYER_LIFE_COUNT=t.PLAYER_LIFE_COUNT,this.PLAYER_LIFES_ICONS=[],this.ENEMY_LIFES_ICONS=[],this.tracks={shotSound:Shot,moveSound:Movement,staySound:Engine,mainSound:Main,deathSound:Death},this.ALL_PLAY_ITEMS=[],this.WALLS=[],this.FOREST=[],this.BULLETS=[],this.ALLTANKS=[],this.PLAYER=[],this.PLAYER_BULLETS=[],this.ENEMIES=[],this.ENEMY_BULLETS=[],this.FLAG=[]}fillTheField(t,e,s){switch(t){case 1:const t=new Player({type:"player-tank",className:"game-object game-object__player-tank",rank:"main",moveLeft:37,moveRight:39,moveDown:40,moveUp:38,shooting:32});t.addItemOnField(e,s,MY_GAME.PLAYER),MY_GAME.ALLTANKS.push(t),MY_GAME.ALL_PLAY_ITEMS.push(t);const i=new Bullet({type:"player-bullet",id:"player",rank:"main"});MY_GAME.BULLETS.push(i),MY_GAME.ALL_PLAY_ITEMS.push(i),MY_GAME.PLAYER_BULLETS.push(i);break;case 2:const a=new Enemy({type:"enemy-tank",className:"game-object game-object__enemy-tank"});a.addItemOnField(e,s,MY_GAME.ENEMIES),MY_GAME.ALLTANKS.push(a),MY_GAME.ALL_PLAY_ITEMS.push(a);const h=new Bullet({type:"enemy-bullet",id:"enemy"});MY_GAME.BULLETS.push(h),MY_GAME.ALL_PLAY_ITEMS.push(h),MY_GAME.ENEMY_BULLETS.push(h);break;case 3:const o=new Wall({type:"wall",class:"game-object__wall"});o.addItemOnField(e,s,MY_GAME.WALLS),MY_GAME.ALL_PLAY_ITEMS.push(o);break;case 4:new Forest({type:"forest",class:"forest"}).addItemOnField(e,s,MY_GAME.FOREST);break;case 5:new Armour({type:"armour",class:"armour"}).addItemOnField(e,s,MY_GAME.ALL_PLAY_ITEMS);break;case 6:if(2===IntroModal.numberOfPlayers){const t=new SecondPlayer({type:"player-tank",className:"game-object game-object__player-tank second-player",moveLeft:100,moveRight:102,moveDown:101,moveUp:104,shooting:96});t.addItemOnField(e,s,MY_GAME.PLAYER),MY_GAME.ALLTANKS.push(t),MY_GAME.ALL_PLAY_ITEMS.push(t);const i=new Bullet({type:"player-bullet",id:"player"});MY_GAME.BULLETS.push(i),MY_GAME.ALL_PLAY_ITEMS.push(i),MY_GAME.PLAYER_BULLETS.push(i)}break;case 7:const n=new PlayerFlag({type:"flag"});n.addItemOnField(e,s,MY_GAME.ALL_PLAY_ITEMS),MY_GAME.FLAG.push(n);break;case 8:new Water({type:"water",class:"water"}).addItemOnField(e,s,MY_GAME.ALL_PLAY_ITEMS)}}draw(){for(let t=0;t<MAP.length;t++)for(let e=0;e<MAP[t].length;e++)for(let s in MAP_LEGEND)MAP[t][e]===MAP_LEGEND[s]&&this.fillTheField(MAP_LEGEND[s],e,t);for(let t=0;t<this.PLAYER_LIFE_COUNT;t++){const t=new LifeIcon({container:".player-lifes-container",class:"player-life",attribute:"img/player-live.png"});this.PLAYER_LIFES_ICONS.push(t)}for(let t=0;t<this.ENEMY_TANKS_COUNT;t++){const t=new LifeIcon({container:".enemy-lifes-container",class:"enemy-life",attribute:"img/enemy-live.png"});this.ENEMY_LIFES_ICONS.push(t)}}countLifes(t){if(!0===t.wasKilled)switch(t.type){case"player-tank":this.PLAYER_LIFES_ICONS[this.PLAYER_LIFES_ICONS.length-this.PLAYER_LIFE_COUNT].life.remove(),this.PLAYER_LIFE_COUNT--;break;case"enemy-tank":this.ENEMY_LIFES_ICONS[this.ENEMY_LIFES_ICONS.length-this.ENEMY_TANKS_COUNT].life.remove(),this.ENEMY_TANKS_COUNT--}}addSounds(){for(let t=0;t<this.PLAYER.length;t++)"main"===this.PLAYER[t].rank&&!1===this.PLAYER[t].run?(this.tracks.moveSound.track.pause(),this.tracks.staySound.track.play()):"main"===this.PLAYER[t].rank&&!0===this.PLAYER[t].run&&(this.tracks.staySound.track.pause(),this.tracks.moveSound.track.play()),!0===this.IS_GAME_OVER&&(this.tracks.staySound.track.pause(),this.tracks.moveSound.track.pause()),!0===this.PLAYER[t].shotIsMade&&!1===this.PLAYER_BULLETS[t].wasKilled&&"main"===this.PLAYER_BULLETS[t].rank&&(this.tracks.shotSound.track.play(),!0!==this.PLAYER_BULLETS[t].isBulletFlying&&!0!==this.PLAYER_BULLETS[t].obstacleReached||(this.PLAYER[t].shotIsMade=!1,this.tracks.shotSound.track.currentTime=0));for(let t=0;t<this.ALLTANKS.length;t++)!0===this.ALLTANKS[t].wasKilled&&this.tracks.deathSound.track.play()}finishGame(){0!==this.PLAYER_LIFE_COUNT&&0!==this.ENEMY_TANKS_COUNT||(MY_GAME.IS_GAME_OVER=!0)}}const MY_GAME=new Game({ENEMY_TANKS_COUNT:21,PLAYER_LIFE_COUNT:10});class Bullet extends GameItem{constructor(t){super(t),this.isBulletFlying=!1,this.bulletDirection="",this.bulletStep=t.bulletStep,this.item.classList.add("bullet"),this.step=16}shoot(t){this.id===t.id&&!1===this.isBulletFlying&&this.gameMap.contains(t.item)&&(t.shotIsMade=!0,this.gameMap.append(this.item),this.item.style.left=t.item.offsetLeft+t.item.offsetWidth/2.5+"px",this.item.style.top=t.item.offsetTop+t.item.offsetHeight/2.5+"px",this.x=t.item.offsetLeft+t.item.offsetWidth/2.5,this.y=t.item.offsetTop+t.item.offsetHeight/2.5,this.direction=t.direction,this.run=!0,this.isBulletFlying=!0,t.numberOfShots++)}reload(){this.wasKilled&&(this.item.remove(),this.isBulletFlying=!1,this.wasKilled=!1,this.run=!0)}}class Tank extends GameItem{constructor(t){super(t),this.step=8,this.run=!1,this.className=t.className,this.shotIsMade=!1}checkDirection(){switch(this.direction){case"left":this.item.className=this.className,this.item.classList.add("left");break;case"top":this.item.className=this.className,this.item.classList.add("top");break;case"right":this.item.className=this.className,this.item.classList.add("right");break;case"down":this.item.className=this.className,this.item.classList.add("down")}}regenerate(){if(this.wasKilled&&(this.item.remove(),!this.gameMap.contains(this.item))){if("player-tank"===this.type&&MY_GAME.PLAYER_LIFE_COUNT>=MY_GAME.PLAYER.length)this.item.style.left=this.baseX+"px",this.item.style.top=this.baseY+"px",this.x=this.baseX,this.y=this.baseY,this.gameMap.append(this.item);else if("enemy-tank"===this.type&&MY_GAME.ENEMY_TANKS_COUNT>=MY_GAME.ENEMIES.length){let t=MY_GAME.ENEMIES[Math.floor(Math.random()*MY_GAME.ENEMIES.length)];this.item.style.left=t.baseX+"px",this.item.style.top=t.baseY+"px",this.x=t.baseX,this.y=t.baseY,this.gameMap.append(this.item)}this.wasKilled=!1}}}class Enemy extends Tank{constructor(t){super(t),this.direction="down",this.run=!0,this.numberOfShots=0,this.item.classList.add("game-object__enemy-tank"),this.id="enemy"}changeDirection(){if(!0===this.obstacleReached&&!1===this.run){let t=this.direction;this.direction=this.directions[Math.floor(Math.random()*this.directions.length)],this.direction!==t&&(this.obstacleReached=!1,this.run=!0,this.numberOfShots=0)}else this.numberOfShots>2&&(this.direction=this.directions[Math.floor(Math.random()*this.directions.length)],this.numberOfShots=0)}}class Player extends Tank{constructor(t){super(t),this.direction="top",this.item.classList.add("game-object__player-tank"),this.id="player",this.moveLeft=t.moveLeft,this.moveRight=t.moveRight,this.moveDown=t.moveDown,this.moveUp=t.moveUp,this.shooting=t.shooting,this.keys={moveLeft:this.moveLeft,moveRight:this.moveRight,moveDown:this.moveDown,moveUp:this.moveUp,shooting:this.shooting}}switchKeycodeToAct(t,e){switch(t){case this.keys.moveLeft:this.direction="left",this.run=!0;break;case this.keys.moveUp:this.direction="top",this.run=!0;break;case this.keys.moveRight:this.direction="right",this.run=!0;break;case this.keys.moveDown:this.direction="down",this.run=!0;break;case this.keys.shooting:MY_GAME.PLAYER_BULLETS[e].shoot(this)}}checkKeyCodeToStop(t){[this.moveLeft,this.moveRight,this.moveUp,this.moveDown].includes(t)&&(this.run=!1)}}class SecondPlayer extends Player{constructor(t){super(t),this.item.classList.add("second-player")}}const IntroModal=new Modal({});function gameInitialization(){MY_GAME.tracks.mainSound.track.play(),MY_GAME.draw(),document.addEventListener("keydown",t=>{let e=t.keyCode;for(let t=0;t<MY_GAME.PLAYER.length;t++)MY_GAME.PLAYER[t].switchKeycodeToAct(e,t)}),document.addEventListener("keyup",t=>{for(let e=0;e<MY_GAME.PLAYER.length;e++)MY_GAME.PLAYER[e].checkKeyCodeToStop(t.keyCode)})}function gameLoop(){!0!==MY_GAME.IS_GAME_OVER?(gameStep(),setTimeout((function(){gameLoop()}),MY_GAME.GAME_TIMER_INTERVAL)):(MY_GAME.IS_GAME_OVER=!1,IntroModal.gameStart=!0,0===MY_GAME.ENEMY_TANKS_COUNT?alert("Victory!)"):alert("Defeated!)"),location.reload())}function gameStep(){MY_GAME.ALLTANKS.forEach(t=>{t.checkDirection(),t.checkDistance(),t.move(),MY_GAME.countLifes(t),t.regenerate()});for(let t=0;t<MY_GAME.ENEMIES.length;t++)MY_GAME.ENEMIES[t].changeDirection(),MY_GAME.ENEMY_BULLETS[t].shoot(MY_GAME.ENEMIES[t]);MY_GAME.WALLS.forEach(t=>{t.destroyTheWall()}),MY_GAME.BULLETS.forEach(t=>{t.move(),t.checkDistance(),t.reload()}),MY_GAME.addSounds(),MY_GAME.finishGame()}IntroModal.show(),IntroModal.makeChoice(),IntroModal.runTheGame(gameInitialization),gameLoop();